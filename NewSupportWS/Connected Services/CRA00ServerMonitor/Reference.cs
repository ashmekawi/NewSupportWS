//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewSupportWS.CRA00ServerMonitor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineInfo", Namespace="http://schemas.datacontract.org/2004/07/ServerStatus.Model")]
    [System.SerializableAttribute()]
    public partial class MachineInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RAMAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPUUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NewSupportWS.CRA00ServerMonitor.HDD_Drive[] MyDrivesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAMAvailable {
            get {
                return this.RAMAvailableField;
            }
            set {
                if ((object.ReferenceEquals(this.RAMAvailableField, value) != true)) {
                    this.RAMAvailableField = value;
                    this.RaisePropertyChanged("RAMAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string CPUUsage {
            get {
                return this.CPUUsageField;
            }
            set {
                if ((object.ReferenceEquals(this.CPUUsageField, value) != true)) {
                    this.CPUUsageField = value;
                    this.RaisePropertyChanged("CPUUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public NewSupportWS.CRA00ServerMonitor.HDD_Drive[] MyDrives {
            get {
                return this.MyDrivesField;
            }
            set {
                if ((object.ReferenceEquals(this.MyDrivesField, value) != true)) {
                    this.MyDrivesField = value;
                    this.RaisePropertyChanged("MyDrives");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HDD_Drive", Namespace="http://schemas.datacontract.org/2004/07/ServerStatus.Model")]
    [System.SerializableAttribute()]
    public partial class HDD_Drive : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HDDAvailableSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HDDAvailableSpacePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HDDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long HDDTotalSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HDDTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HDDAvailableSpace {
            get {
                return this.HDDAvailableSpaceField;
            }
            set {
                if ((this.HDDAvailableSpaceField.Equals(value) != true)) {
                    this.HDDAvailableSpaceField = value;
                    this.RaisePropertyChanged("HDDAvailableSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDDAvailableSpacePercentage {
            get {
                return this.HDDAvailableSpacePercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.HDDAvailableSpacePercentageField, value) != true)) {
                    this.HDDAvailableSpacePercentageField = value;
                    this.RaisePropertyChanged("HDDAvailableSpacePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDDName {
            get {
                return this.HDDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HDDNameField, value) != true)) {
                    this.HDDNameField = value;
                    this.RaisePropertyChanged("HDDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long HDDTotalSpace {
            get {
                return this.HDDTotalSpaceField;
            }
            set {
                if ((this.HDDTotalSpaceField.Equals(value) != true)) {
                    this.HDDTotalSpaceField = value;
                    this.RaisePropertyChanged("HDDTotalSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDDType {
            get {
                return this.HDDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HDDTypeField, value) != true)) {
                    this.HDDTypeField = value;
                    this.RaisePropertyChanged("HDDType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRA00ServerMonitor.IMachineInfo")]
    public interface IMachineInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineInfo/GetMachineInfo", ReplyAction="http://tempuri.org/IMachineInfo/GetMachineInfoResponse")]
        NewSupportWS.CRA00ServerMonitor.MachineInfo GetMachineInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineInfo/GetMachineInfo", ReplyAction="http://tempuri.org/IMachineInfo/GetMachineInfoResponse")]
        System.Threading.Tasks.Task<NewSupportWS.CRA00ServerMonitor.MachineInfo> GetMachineInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineInfo/GetallDrives", ReplyAction="http://tempuri.org/IMachineInfo/GetallDrivesResponse")]
        string[] GetallDrives();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineInfo/GetallDrives", ReplyAction="http://tempuri.org/IMachineInfo/GetallDrivesResponse")]
        System.Threading.Tasks.Task<string[]> GetallDrivesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMachineInfoChannel : NewSupportWS.CRA00ServerMonitor.IMachineInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MachineInfoClient : System.ServiceModel.ClientBase<NewSupportWS.CRA00ServerMonitor.IMachineInfo>, NewSupportWS.CRA00ServerMonitor.IMachineInfo {
        
        public MachineInfoClient() {
        }
        
        public MachineInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MachineInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewSupportWS.CRA00ServerMonitor.MachineInfo GetMachineInfo() {
            return base.Channel.GetMachineInfo();
        }
        
        public System.Threading.Tasks.Task<NewSupportWS.CRA00ServerMonitor.MachineInfo> GetMachineInfoAsync() {
            return base.Channel.GetMachineInfoAsync();
        }
        
        public string[] GetallDrives() {
            return base.Channel.GetallDrives();
        }
        
        public System.Threading.Tasks.Task<string[]> GetallDrivesAsync() {
            return base.Channel.GetallDrivesAsync();
        }
    }
}
